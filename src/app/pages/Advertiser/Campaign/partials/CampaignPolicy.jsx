import { useParams, useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import { Card, Button, message } from "antd";
import mockPolicy from "./mock_policy.json";

export default function CampaignPolicy() {
  const { campaignId } = useParams();
  const navigate = useNavigate();
  const [policy, setPolicy] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchPolicy() {
      try {
        if (!mockPolicy || !Array.isArray(mockPolicy)) {
          throw new Error("D·ªØ li·ªáu ch√≠nh s√°ch kh√¥ng h·ª£p l·ªá!");
        }

        const policyData = mockPolicy.find(p => p.campaignId && p.campaignId.toString() === campaignId);
        
        if (!policyData) {
          throw new Error("Kh√¥ng t√¨m th·∫•y ch√≠nh s√°ch chi·∫øn d·ªãch!");
        }

        setPolicy(policyData);
      } catch (error) {
        message.error(error.message);
      } finally {
        setLoading(false);
      }
    }
    fetchPolicy();
  }, [campaignId]);

  if (loading) return <p className="text-center mt-6">ƒêang t·∫£i...</p>;
  if (!policy) return <p className="text-center mt-6 text-red-600">Ch√≠nh s√°ch chi·∫øn d·ªãch kh√¥ng t·ªìn t·∫°i!</p>;

  return (
    <div className="p-6 flex justify-center">
      <Card className="shadow rounded-lg bg-white p-6 max-w-[1500px] w-full">
        
        {/* ƒêi·ªÅu h∆∞·ªõng */}
        <div className="flex justify-between items-center mb-4">
          <Button onClick={() => navigate(-1)} className="mr-4">
            ‚¨Ö Quay l·∫°i
          </Button>
          <span className="text-gray-500">Chi·∫øn d·ªãch / Ch√≠nh s√°ch / {policy.policyTitle}</span>
        </div>

        {/* N·ªôi dung ch√≠nh s√°ch */}
        <h2 className="text-2xl font-semibold mb-4">{policy.policyTitle}</h2>
        <p className="text-gray-600">{policy.description}</p>

        {/* Danh s√°ch quy ƒë·ªãnh */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üìú Quy ƒë·ªãnh</h3>
          <ul className="list-disc pl-6">
            {policy.rules.map((rule, index) => (
              <li key={index} className="mb-2">{rule}</li>
            ))}
          </ul>
        </Card>

        {/* C·∫•u tr√∫c hoa h·ªìng */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üí∞ C·∫•u tr√∫c hoa h·ªìng</h3>
          <p><strong>Lo·∫°i hoa h·ªìng:</strong> {policy.commissionStructure.type}</p>
          <p><strong>M·ª©c hoa h·ªìng chung:</strong> {policy.commissionStructure.rate}</p>
          <h4 className="text-md font-semibold mt-3">Chi ti·∫øt theo danh m·ª•c:</h4>
          <ul className="list-disc pl-6">
            {policy.commissionStructure.details.map((item, index) => (
              <li key={index}>
                <strong>{item.category}</strong>: {item.rate}
              </li>
            ))}
          </ul>
        </Card>

        {/* H·∫°n ch·∫ø */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üö´ H·∫°n ch·∫ø</h3>
          <ul className="list-disc pl-6">
            {policy.restrictions.map((restriction, index) => (
              <li key={index}>{restriction}</li>
            ))}
          </ul>
        </Card>

        {/* H√¨nh ph·∫°t */}
        <Card className="bg-red-100 mt-6">
          <h3 className="text-lg font-semibold mb-3">‚ö†Ô∏è H√¨nh ph·∫°t</h3>
          <p>{policy.penalty}</p>
        </Card>

      </Card>
    </div>
  );
}
