import { useParams, useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import { Card, Button, Table, message } from "antd";
import mockPerformance from "./mock_performance.json";

export default function CampaignPerformance() {
  const { campaignId } = useParams();
  const navigate = useNavigate();
  const [performance, setPerformance] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchPerformance() {
      try {
        // T√¨m d·ªØ li·ªáu theo campaignId t·ª´ mock JSON
        const data = mockPerformance.find(p => p.campaignId.toString() === campaignId);
        if (!data) throw new Error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu hi·ªáu su·∫•t!");
        setPerformance(data);
      } catch (error) {
        message.error(error.message);
      } finally {
        setLoading(false);
      }
    }
    fetchPerformance();
  }, [campaignId]);

  if (loading) return <p className="text-center mt-6">ƒêang t·∫£i...</p>;
  if (!performance) return <p className="text-center mt-6 text-red-600">Kh√¥ng c√≥ d·ªØ li·ªáu hi·ªáu su·∫•t!</p>;

  return (
    <div className="p-6 flex justify-center">
      <Card className="shadow rounded-lg bg-white p-6 max-w-[1500px] w-full">
        
        {/* ƒêi·ªÅu h∆∞·ªõng */}
        <div className="flex justify-between items-center mb-4">
          <Button onClick={() => navigate(-1)} className="mr-4">
            ‚¨Ö Quay l·∫°i
          </Button>
          <span className="text-gray-500">Chi·∫øn d·ªãch / Hi·ªáu su·∫•t</span>
        </div>

        {/* Ti√™u ƒë·ªÅ */}
        <h2 className="text-2xl font-semibold mb-4">üìä Hi·ªáu su·∫•t Chi·∫øn D·ªãch</h2>

        {/* T·ªïng quan hi·ªáu su·∫•t */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üìà T·ªïng quan</h3>
          <p><strong>L∆∞·ª£t Click:</strong> {performance.totalClicks.toLocaleString()}</p>
          <p><strong>S·ªë Chuy·ªÉn ƒê·ªïi:</strong> {performance.totalConversions.toLocaleString()}</p>
          <p><strong>T·ª∑ L·ªá Chuy·ªÉn ƒê·ªïi:</strong> {performance.conversionRate}%</p>
        </Card>

        {/* Doanh thu & c√¥ng th·ª©c t√≠nh */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üí∞ Doanh thu</h3>
          <p><strong>Doanh thu th·ª±c t·∫ø:</strong> {performance.totalRevenue.toLocaleString()} VND</p>
          <p><strong>M·ª©c hoa h·ªìng:</strong> {performance.commissionRate}%</p>
          <p><strong>Gi√° tr·ªã ƒë∆°n h√†ng trung b√¨nh:</strong> {performance.averageOrderValue.toLocaleString()} VND</p>
          <p><strong>Doanh thu ∆∞·ªõc t√≠nh:</strong> {performance.estimatedRevenue.toLocaleString()} VND</p>
          <p className="text-gray-600 mt-2">üìå C√¥ng th·ª©c: <br/>
            <i>Estimated Revenue = Total Conversions √ó Average Order Value √ó (Commission Rate / 100)</i>
          </p>
        </Card>

        {/* Clicks theo ng√†y */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üìÖ Clicks theo ng√†y</h3>
          <Table
            columns={[
              { title: "Ng√†y", dataIndex: "date", key: "date" },
              { title: "L∆∞·ª£t Click", dataIndex: "clicks", key: "clicks" },
              { title: "Chuy·ªÉn ƒê·ªïi", dataIndex: "conversions", key: "conversions" }
            ]}
            dataSource={performance.clicksByDay}
            pagination={false}
          />
        </Card>

        {/* Traffic ngu·ªìn */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üîù Ngu·ªìn Traffic</h3>
          <Table
            columns={[
              { title: "Ngu·ªìn", dataIndex: "source", key: "source" },
              { title: "L∆∞·ª£t Click", dataIndex: "clicks", key: "clicks" },
              { title: "Chuy·ªÉn ƒê·ªïi", dataIndex: "conversions", key: "conversions" }
            ]}
            dataSource={performance.topTrafficSources}
            pagination={false}
          />
        </Card>

        {/* Hi·ªáu su·∫•t theo Qu·ªëc gia */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üåç Hi·ªáu su·∫•t theo qu·ªëc gia</h3>
          <Table
            columns={[
              { title: "Qu·ªëc gia", dataIndex: "country", key: "country" },
              { title: "L∆∞·ª£t Click", dataIndex: "clicks", key: "clicks" },
              { title: "Chuy·ªÉn ƒê·ªïi", dataIndex: "conversions", key: "conversions" }
            ]}
            dataSource={performance.geoPerformance}
            pagination={false}
          />
        </Card>

        {/* Hi·ªáu su·∫•t theo thi·∫øt b·ªã */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üì± Hi·ªáu su·∫•t theo thi·∫øt b·ªã</h3>
          <Table
            columns={[
              { title: "Thi·∫øt b·ªã", dataIndex: "device", key: "device" },
              { title: "L∆∞·ª£t Click", dataIndex: "clicks", key: "clicks" },
              { title: "Chuy·ªÉn ƒê·ªïi", dataIndex: "conversions", key: "conversions" }
            ]}
            dataSource={performance.devicePerformance}
            pagination={false}
          />
        </Card>

        {/* Qu·∫£ng c√°o hi·ªáu su·∫•t cao nh·∫•t */}
        <Card className="bg-gray-50 mt-6">
          <h3 className="text-lg font-semibold mb-3">üèÜ Qu·∫£ng c√°o hi·ªáu su·∫•t cao nh·∫•t</h3>
          <Table
            columns={[
              { title: "T√™n qu·∫£ng c√°o", dataIndex: "adName", key: "adName" },
              { title: "L∆∞·ª£t Click", dataIndex: "clicks", key: "clicks" },
              { title: "Chuy·ªÉn ƒê·ªïi", dataIndex: "conversions", key: "conversions" },
              { title: "T·ª∑ l·ªá chuy·ªÉn ƒë·ªïi (%)", dataIndex: "conversionRate", key: "conversionRate" }
            ]}
            dataSource={performance.bestPerformingAds}
            pagination={false}
          />
        </Card>

      </Card>
    </div>
  );
}
